datasource db {
    provider = "postgresql"
    url = "***"
}

model Cargo {
    id       Int        @default(autoincrement()) @id
    nombre   String     @unique
    estado   Boolean    @default(true)
    personal Personal[]
}

model Personal {
    id               Int         @default(autoincrement()) @id
    nombres          String
    apellidos        String
    cargo            Cargo       @relation(fields: [cargoId], references: [id])
    cargoId          Int
    sueldo           Float
    estado           Boolean     @default(true)
    pedidosAtendidos Pedido[]
    credencial       Credencial?
}

model Credencial {
    id         Int      @default(autoincrement()) @id
    usuario    String   @unique
    clave      String
    estado     Boolean  @default(true)
    rol        Rol      @default(USUARIO)
    personal   Personal @relation(fields: [personalId], references: [id])
    personalId Int
}

model Insumo {
    id                Int              @default(autoincrement()) @id
    nombre            String
    fechaVencimiento  DateTime?
    cantidad          Float
    unidad            String
    estado            Boolean          @default(true)
    comprasRealizadas DetalleCompra[]
    productos         InsumoProducto[]
}

model Compra {
    id      Int             @default(autoincrement()) @id
    serie   Int
    numero  Int
    precio  Float
    fecha   DateTime
    insumos DetalleCompra[]

    @@unique([serie, numero])
}

model DetalleCompra {
    insumo   Insumo @relation(fields: [insumoId], references: [id])
    insumoId Int
    compra   Compra @relation(fields: [compraId], references: [id])
    compraId Int
    importe  Float
    cantidad Float
    unidad   String

    @@id([insumoId, compraId])
}

model TipoProducto {
    id        Int        @default(autoincrement()) @id
    nombre    String     @unique
    estado    Boolean    @default(true)
    productos Producto[]
}

model Producto {
    id                Int              @default(autoincrement()) @id
    tipoProducto      TipoProducto     @relation(fields: [tipoProductoId], references: [id])
    tipoProductoId    Int
    nombre            String
    descripcion       String?
    cantidad          Int              @default(0)
    precio            Float
    estado            Boolean          @default(true)
    imagen            String
    pedidosRealizados DetallePedido[]
    receta            InsumoProducto[]
}

model InsumoProducto {
    producto   Producto @relation(fields: [productoId], references: [id])
    productoId Int
    insumo     Insumo   @relation(fields: [insumoId], references: [id])
    insumoId   Int
    cantidad   Float
    unidad     String
    @@id([productoId, insumoId])
}

model Mesa {
    id                Int      @default(autoincrement()) @id
    numero            Int
    ocupado           Boolean  @default(false)
    estado            Boolean  @default(true)
    pedidosRealizados Pedido[]
}

model TipoPago {
    id           Int     @default(autoincrement()) @id
    nombre       String  @unique
    estado       Boolean @default(true)
    pagosPorTipo Pago[]
}

model Pago {
    id         Int      @default(autoincrement()) @id
    serie      Int
    numero     Int
    fecha      DateTime @default(now())
    monto      Float
    tipoPago   TipoPago @relation(fields: [tipoPagoId], references: [id])
    tipoPagoId Int
    pedido     Pedido   @relation(fields: [pedidoId], references: [id])
    pedidoId   Int
    @@unique([serie, numero])
}

model Pedido {
    id         Int             @default(autoincrement()) @id
    pago       Pago?
    personal   Personal        @relation(fields: [personalId], references: [id])
    personalId Int
    mesa       Mesa            @relation(fields: [mesaId], references: [id])
    mesaId     Int
    estado     Boolean         @default(true)
    monto      Float           @default(0)
    fecha      DateTime        @default(now())
    productos  DetallePedido[]
}

model Reclamo {
    id            Int           @default(autoincrement()) @id
    detallePedido DetallePedido @relation(fields: [pedidoId, productoId], references: [pedidoId, productoId])
    pedidoId      Int
    productoId    Int
    motivo        String
    @@unique([pedidoId, productoId])
}

model DetallePedido {
    pedido     Pedido    @relation(fields: [pedidoId], references: [id])
    pedidoId   Int
    producto   Producto  @relation(fields: [productoId], references: [id])
    productoId Int
    precio     Float
    cantidad   Int
    entregado  Boolean   @default(false)
    estado     Boolean   @default(true)
    reclamos   Reclamo[]
    @@id([pedidoId, productoId])
}

enum Rol {
    ADMIN
    USUARIO
}

generator client {
    provider = "prisma-client-js"
}
